#!/usr/bin/env python3
import subprocess
from apscheduler.schedulers.blocking import BlockingScheduler
import datetime

def run_data_ingestion():
    print(f"[{datetime.datetime.now()}] Running data ingestion...")
    subprocess.run(["python", "data_collection.py"])

def run_feature_engineering():
    print(f"[{datetime.datetime.now()}] Running feature engineering...")
    subprocess.run(["python", "feature_engineering_current.py"])

def run_model_training():
    print(f"[{datetime.datetime.now()}] Running model training...")
    subprocess.run(["python", "model_training_current.py"])

def full_pipeline():
    print(f"\n----- Pipeline triggered at {datetime.datetime.now()} -----")
    run_data_ingestion()
    run_feature_engineering()
    run_model_training()
    print(f"----- Pipeline completed at {datetime.datetime.now()} -----\n")

if __name__ == "__main__":
    scheduler = BlockingScheduler(timezone="UTC")
    # Schedule the pipeline to run every hour.
    scheduler.add_job(full_pipeline, 'interval', hours=1)
    print("Scheduler started. Pipeline will run every hour.")
    try:
        scheduler.start()
    except (KeyboardInterrupt, SystemExit):
        print("Scheduler stopped.")
